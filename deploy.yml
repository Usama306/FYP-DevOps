---
- name: Deploy Node.js Environment App
  hosts: remote
  become: yes
  become_method: sudo
  gather_facts: yes
  vars:
    app_dir: "/home/dev/app"
    repo_url: "https://github.com/Usama306/FYP-DevOps.git"
    packages:
      - git
      - nodejs
      - npm
      - docker.io
      - docker-compose
      - python3
      - python3-pip

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      become: yes
      become_method: sudo

    - name: Install required packages
      apt:
        name: "{{ packages }}"
        state: present
      become: yes
      become_method: sudo

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: yes
      become_method: sudo

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
      become: yes
      become_method: sudo

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
      become: yes
      become_method: sudo

    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'
      become: yes
      become_method: sudo

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      become: yes
      become_method: sudo

    - name: Create app directory if it doesn't exist
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      become: yes
      become_method: sudo

    - name: Pull latest code from GitHub
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}"
        update: yes
        force: yes

    - name: Set directory permissions
      file:
        path: "{{ app_dir }}"
        state: directory
        recurse: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      become: yes
      become_method: sudo

    - name: Create public directory
      file:
        path: "{{ app_dir }}/app/public"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      become: yes
      become_method: sudo

    - name: Install Node.js dependencies
      npm:
        path: "{{ app_dir }}/app"
        state: present
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Build the CSS
      command: npm run build:css
      args:
        chdir: "{{ app_dir }}/app"
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Stop existing Docker containers
      command: docker compose down
      args:
        chdir: "{{ app_dir }}"
      ignore_errors: yes
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Build and start Docker containers
      command: docker compose up -d --build
      args:
        chdir: "{{ app_dir }}"
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Wait for containers to be running
      wait_for:
        timeout: 30

    - name: Check container status
      command: docker ps
      register: container_status
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Display container status
      debug:
        var: container_status.stdout_lines

    - name: Verify application endpoints
      uri:
        url: "http://localhost:{{ item.port }}"
        return_content: yes
        status_code: 200
      loop:
        - { port: 3001, env: "Development" }
        - { port: 3002, env: "Test" }
        - { port: 3003, env: "Production" }
      register: endpoint_check
      ignore_errors: yes